package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLogAllPropertiesEquals(Log expected, Log actual) {
        assertLogAutoGeneratedPropertiesEquals(expected, actual);
        assertLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLogAllUpdatablePropertiesEquals(Log expected, Log actual) {
        assertLogUpdatableFieldsEquals(expected, actual);
        assertLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLogAutoGeneratedPropertiesEquals(Log expected, Log actual) {
        assertThat(expected)
            .as("Verify Log auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLogUpdatableFieldsEquals(Log expected, Log actual) {
        assertThat(expected)
            .as("Verify Log relevant properties")
            .satisfies(e -> assertThat(e.getEventType()).as("check eventType").isEqualTo(actual.getEventType()))
            .satisfies(e -> assertThat(e.getEventTime()).as("check eventTime").isEqualTo(actual.getEventTime()))
            .satisfies(e -> assertThat(e.getIpAddress()).as("check ipAddress").isEqualTo(actual.getIpAddress()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLogUpdatableRelationshipsEquals(Log expected, Log actual) {
        // empty method
    }
}
